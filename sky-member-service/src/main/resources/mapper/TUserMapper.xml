<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sky.member.mapper.TUserMapper">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.sky.member.entity.TUserEntity" id="tUserMap">
        <result property="uid" column="uid"/>
        <result property="password" column="password"/>
        <result property="username" column="username"/>
        <result property="realname" column="realname"/>
        <result property="loginIp" column="login_ip"/>
        <result property="regIp" column="reg_ip"/>
        <result property="agUsername" column="ag_username"/>
        <result property="agPassword" column="ag_password"/>
        <result property="hgUsername" column="hg_username"/>
        <result property="email" column="email"/>
        <result property="vipLevel" column="vip_level"/>
        <result property="mobile" column="mobile"/>
        <result property="cagent" column="cagent"/>
        <result property="isDaili" column="is_daili"/>
        <result property="isDelete" column="is_delete"/>
        <result property="qkPwd" column="qk_pwd"/>
        <result property="regDate" column="reg_date"/>
        <result property="loginTime" column="login_time"/>
        <result property="wallet" column="wallet"/>
        <result property="topUid" column="top_uid"/>
        <result property="isStop" column="is_stop"/>
        <result property="isMobile" column="is_mobile"/>
        <result property="rmk" column="rmk"/>
        <result property="typeId" column="type_id"/>
        <result property="juniorUid" column="junior_uid"/>
        <result property="regurl" column="regurl"/>
        <result property="loginmobile" column="loginmobile"/>
    </resultMap>

	<update timeout="20" id="updateGame" parameterType="java.util.Map">
		update t_user

		<if test="is_stop != null and is_stop !=''">
			set is_stop = #{is_stop}
		</if>
		<if test="hg_username != null and hg_username !=''">
			set hg_username = #{hg_username}
		</if>
		<if test="password != null and password !=''">
			set password = #{password}
		</if>
		<if test="qkpwd != null and qkpwd !=''">
			set qk_pwd = #{qkpwd}
		</if>
		<if test="login != null and login !=''">
			set login_time = NOW() ,login_ip=INET_ATON(#{ip})
		</if>
		where username = #{userName} ;
	</update>

	<select id="queryObject" resultMap="tUserMap">
		select * from t_user where uid = #{id}
	</select>

	<select timeout="20" id="queryUserByUserName" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT * FROM t_user WHERE 1 = 1
		<if test="userName != null and userName !=''">
			AND lower(username) = lower(#{userName})
		</if>
		<if test="passWord != null and passWord !=''">
			AND password = #{passWord}
		</if>
	</select>
	<select timeout="20" id="selectUserByUserName" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT * FROM t_user WHERE 1 = 1
		<if test="userName != null and userName !=''">
			AND lower(username) = lower(#{userName})
		</if>
		<if test="passWord != null and passWord !=''">
			AND password = #{passWord}
		</if>
	</select>
	<select timeout="20" id="selectUserByMobileNo" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT * FROM t_user  WHERE cagent=#{cagent} and loginmobile=#{mobileNo}
		<if test="password != null and password !=''">
			and   password = #{password}
		</if>
	</select>
	<select timeout="20" id="selectUserInfo" parameterType="java.util.Map"
			resultType="java.util.Map">
		select
		username,realname,email,vip_level,mobile,reg_date,login_time,wallet,IFNULL((select
		balance from t_user_wallet where uid=t_user.uid and
		t_user_wallet.type=1),0) as integral ,loginmobile
		from t_user WHERE uid = #{uid}
	</select>

	<select timeout="20" id="selectUserById" parameterType="java.util.Map"
			resultType="java.util.Map">
		SELECT t_user.*,IFNULL((select balance from t_user_wallet where
		uid=t_user.uid and t_user_wallet.type=1),0) as integral FROM t_user
		WHERE uid = #{uid}
	</select>
	<select timeout="20" id="selectReserveAccount" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT * FROM t_reserve_account WHERE 1 = 1
		<if test="userName != null and userName !=''">
			AND lower(username) = lower(#{userName})
		</if>
		<if test="cagent != null and cagent !=''">
			AND cagent = #{cagent}
		</if>
	</select>
	<select timeout="20" id="checkkpwd" parameterType="java.util.Map"
			resultType="java.util.Map">
		SELECT *
		FROM t_user WHERE uid = #{uid} and qk_pwd =#{pwd}
	</select>
	<select timeout="20" id="selectQkpwdCheck" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT  * FROM t_user WHERE qk_pwd ='' AND  uid=#{uid};
	</select>
	<select timeout="20" id="queryProxyByName" parameterType="java.lang.String"
			resultType="java.util.Map">
		SELECT pu.user_name,pu.domain FROM t_cagent ca LEFT JOIN t_proxy_user pu ON pu.cid = ca.id
		WHERE ca.cagent = #{cagent} AND pu.domain NOT IN ('')
		UNION ALL
		SELECT user_name, domain FROM t_junior_proxy_user jpu WHERE proxy_user_id IN ( SELECT id FROM t_proxy_user WHERE cid = ( SELECT id FROM t_cagent WHERE cagent = #{cagent}   )AND jpu.domain NOT IN (''));

	</select>

	<select timeout="20" id="getProxyUser" parameterType="java.lang.String"
			resultType="java.util.Map">
		select b.id as pid,a.d_user_type FROM t_proxy_user a
		inner join user b on
		a.user_name=b.login_name
		left join t_cagent c on a.cid=c.id
		where
		a.user_name = #{proxyname} and c.cagent=#{cagent} and b.type='1'
	</select>
	<select timeout="20" id="getJuniorProxyUser" parameterType="java.lang.String"
			resultType="java.util.Map">
		select a.up_id as pid,c.id as up_id,b.d_user_type from t_junior_proxy_user a
		left join
		t_proxy_user b on a.proxy_user_id=b.id
		left join `user` c on
		b.user_name=c.login_name
		LEFT JOIN t_cagent d on c.cid=d.id
		where
		a.user_name = #{proxyname} and d.cagent=#{cagent}
	</select>

	<insert timeout="20" id="insertUser" parameterType="java.util.Map">
		insert into
		t_user(username,password,login_ip,reg_ip,ag_username,ag_password,email,vip_level,mobile,
		cagent,is_daili,is_delete,qk_pwd,reg_date,login_time,wallet,top_uid,is_stop,is_mobile,realname,hg_username,type_id,junior_uid,regurl,loginmobile,rmk)
		values(#{username},#{password},INET_ATON(#{reg_ip}),INET_ATON(#{reg_ip}),#{ag_username},#{ag_password},#{email},#{vip_level},#{mobile},#{cagent},#{is_daili},'0',#{qkpwd},now(),now(),
		'0',#{top_uid},'0',#{is_mobile},#{realName},
		<!-- (select * from (select CONCAT(#{cagent},SUBSTR(10000001+MAX(uid),2 , 7))  from t_user) a) -->
		#{hg_username}
		,
		<if test="usertype != null and usertype !=''">
			#{usertype}
		</if>
		<if test="usertype == null or usertype ==''">
			IFNULL((select a.id
			typeid from t_user_type a left join t_cagent b on
			a.cid=b.id where
			b.cagent=#{cagent} and a.isDefault=0 LIMIT 0,1),0)
		</if>
		,#{junior_uid},#{regurl},#{loginmobile},#{remark});
	</insert>
	<insert timeout="20" id="saveUser" parameterType="java.util.Map">
		insert into
		t_user(username,password,login_ip,reg_ip,ag_username,ag_password,email,vip_level,mobile,
		cagent,is_daili,is_delete,qk_pwd,reg_date,login_time,wallet,top_uid,is_stop,is_mobile,realname,hg_username,type_id,junior_uid,regurl,loginmobile,rmk)
		values(#{username},#{password},INET_ATON(#{reg_ip}),INET_ATON(#{reg_ip}),#{ag_username},#{ag_password},#{email},#{vip_level},#{mobile},#{cagent},#{is_daili},'0',#{qkpwd},now(),now(),
		'0',#{top_uid},'0',#{is_mobile},#{realName},
		<!-- (select * from (select CONCAT(#{cagent},SUBSTR(10000001+MAX(uid),2 , 7))  from t_user) a) -->
		#{hg_username}
		,
		<if test="usertype != null and usertype !=''">
			#{usertype}
		</if>
		<if test="usertype == null or usertype ==''">
			IFNULL((select a.id
			typeid from t_user_type a left join t_cagent b on
			a.cid=b.id where
			b.cagent=#{cagent} and a.isDefault=0 LIMIT 0,1),0)
		</if>
		,#{junior_uid},#{regurl},#{loginmobile},#{remark});
	</insert>



	<select id="queryList" resultMap="tUserMap">
		select * from t_user
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by uid desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_user 
	</select>
	 
	<insert id="save" parameterType="com.sky.member.entity.TUserEntity" useGeneratedKeys="true" keyProperty="uid">
		insert into t_user
		(
			`password`, 
			`username`, 
			`realname`, 
			`login_ip`, 
			`reg_ip`, 
			`ag_username`, 
			`ag_password`, 
			`hg_username`, 
			`email`, 
			`vip_level`, 
			`mobile`, 
			`cagent`, 
			`is_daili`, 
			`is_delete`, 
			`qk_pwd`, 
			`reg_date`, 
			`login_time`, 
			`wallet`, 
			`top_uid`, 
			`is_stop`, 
			`is_mobile`, 
			`rmk`, 
			`type_id`, 
			`junior_uid`, 
			`regurl`, 
			`loginmobile`
		)
		values
		(
			#{password}, 
			#{username}, 
			#{realname}, 
			#{loginIp}, 
			#{regIp}, 
			#{agUsername}, 
			#{agPassword}, 
			#{hgUsername}, 
			#{email}, 
			#{vipLevel}, 
			#{mobile}, 
			#{cagent}, 
			#{isDaili}, 
			#{isDelete}, 
			#{qkPwd}, 
			now(),
			#{loginTime}, 
			#{wallet}, 
			#{topUid}, 
			#{isStop}, 
			#{isMobile}, 
			#{rmk}, 
			#{typeId}, 
			#{juniorUid}, 
			#{regurl}, 
			#{loginmobile}
		)
	</insert>
	 
	<update id="update" parameterType="com.sky.member.entity.TUserEntity">
		update t_user 
		<set>
			<if test="password != null">`password` = #{password}, </if>
			<if test="username != null">`username` = #{username}, </if>
			<if test="realname != null">`realname` = #{realname}, </if>
			<if test="loginIp != null">`login_ip` = #{loginIp}, </if>
			<if test="regIp != null">`reg_ip` = #{regIp}, </if>
			<if test="agUsername != null">`ag_username` = #{agUsername}, </if>
			<if test="agPassword != null">`ag_password` = #{agPassword}, </if>
			<if test="hgUsername != null">`hg_username` = #{hgUsername}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="vipLevel != null">`vip_level` = #{vipLevel}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="cagent != null">`cagent` = #{cagent}, </if>
			<if test="isDaili != null">`is_daili` = #{isDaili}, </if>
			<if test="isDelete != null">`is_delete` = #{isDelete}, </if>
			<if test="qkPwd != null">`qk_pwd` = #{qkPwd}, </if>
			<if test="regDate != null">`reg_date` = #{regDate}, </if>
			<if test="loginTime != null">`login_time` = #{loginTime}, </if>
			<if test="wallet != null">`wallet` = #{wallet}, </if>
			<if test="topUid != null">`top_uid` = #{topUid}, </if>
			<if test="isStop != null">`is_stop` = #{isStop}, </if>
			<if test="isMobile != null">`is_mobile` = #{isMobile}, </if>
			<if test="rmk != null">`rmk` = #{rmk}, </if>
			<if test="typeId != null">`type_id` = #{typeId}, </if>
			<if test="juniorUid != null">`junior_uid` = #{juniorUid}, </if>
			<if test="regurl != null">`regurl` = #{regurl}, </if>
			<if test="loginmobile != null">`loginmobile` = #{loginmobile}</if>
		</set>
		where uid = #{uid}
	</update>
	
	<delete id="delete">
		delete from t_user where uid = #{id}
	</delete>
	
	<delete id="deleteBatch">
		delete from t_user where uid in 
		<foreach item="uid" collection="array" open="(" separator="," close=")">
			#{uid}
		</foreach>
	</delete>

</mapper>